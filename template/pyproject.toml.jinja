[build-system]
requires = ["setuptools>=77"]
build-backend = "setuptools.build_meta"

[project]
name = "{{project_name}}"
authors = [
    {name = "{{author_name}}", email = "{{author_email}}"},
]
description = "{{project_description}}"
readme = "README.md"
requires-python = ">={{min_python_version}}"
license = "TODO add license ref here -> https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license-and-license-files"
license-files = ["LICENSE"]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    # TODO INSERT REQUIREMENTS HERE
]
version = "0.1.0"

[project.urls]
# Homepage = "TBD"
# Documentation = "TBD"
# Repository = "TBD"
# Issues = "TBD"
# Changelog = "TBD"

[tool.setuptools]
packages = {find = {where = ["src",]}}
platforms = ["any"]

[tool.ruff]
line-length = 140
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore subprocess calls
  "S607", "S602", "S603",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # allow booleans generally in function signatures
  "FBT001", "FBT002",
]

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
